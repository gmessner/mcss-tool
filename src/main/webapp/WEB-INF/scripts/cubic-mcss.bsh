/**
 * Cubic Maximum Contiguous Subsequence Sum Algorithm
 * seqStart and seqStop represent the actual best sequence, maxSum is the
 * calculated sum for that sequence. Estimate of algorithm performance is
 * O(n^3) where n is the size of the array.
 */
int seqStart = -1;
int seqStop  = -1;
int maxSum   = 0;

for ( int i = 0; i < a.length; i++ ) {
    for ( int j = i; j < a.length; j++ ) {

        int curSum = 0;
        for ( int k = i; k <= j; k++ ) {

            curSum += a[k];
            if (curSum > maxSum) {
                maxSum   = curSum;
                seqStart = i;
                seqStop  = j;
            }
        }
    }
}
        
print("Maximum Sub Sequence Sum: " + maxSum);
print("Sub Sequence start index: " + seqStart);
print("Sub Sequence stop index : " + seqStop); 
